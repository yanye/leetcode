/************************************************************************/
/*                                   
思路：  
1） 将字符串首部多余的空格去除掉；
2） 将字符串整体反转；
3） 去掉反转后字符串首部多余的空格；
4） 对反转后的字符串，反转每个单词，在其中，若发现有连续的空格，需要将连续的空格去掉                             
*/
/************************************************************************/
#include <iostream>
#include <string>
using namespace std;
/************************************************************************/
/*                            
反转整个字符串函数，采用前后交换的思路，注意交换的下标特别容易出错
*/
/************************************************************************/
void reverseWholeStr(string &s, int begin , int end){
    int i;
    if (begin<0||end<=0||begin>=end)
        return;
    for(i=0;i<=(end-begin)/2;i++){
        char tmp=s[begin+i];
        s[begin+i]=s[end-i];
        s[end-i]=tmp;
    }
    return;
}
/************************************************************************/
/*                            
反转整个单词函数
*/
/************************************************************************/
void reverseWords(string &s) {
    if(s.length()<=0)
        return;
    int i=0;
    int j=0;
    while (s[j]==' ')
    {//删除字符串首部的空格
        s.erase(j,1);
    }
    reverseWholeStr(s,0,s.length()-1);//反转所有的字符串
    while (s[j]==' ')
    {//删除反转后字符串首部的空格
        s.erase(j,1);
    }
    while(j<s.length()){
        if(s[j]!=' '){//若发现是单词，下标往前近
            j++;
        }else{
            if(j>i+1){//完成了一个单词的前进，将该单词再次反转
                reverseWholeStr(s,i,j-1);
                j++;
                i=j;//更新下标
            }else{//处理多余的空格
                if (j+1<s.length()&&s[j+1]!=' ')
                {//发现这是最后一个空格，则不需要删除，直接往前进
                    j++;
                    i=j;
                }else{//删除多余的空格，注意删除完后，下标要回到最后一个单词的位置，这样在if判断中，不会出错
                    s.erase(j,1);
                    j=j-1;
                    i=j;
                }
            }
        }
    }
    if(j>i+1){//若最后一个单词后面没有空格，则会执行到这边，需要再将最后一个单词反转
        reverseWholeStr(s,i,j-1);
        j++;
        i=j;
    }
    return;
}
void main (void)
{
    string s="   hi   ,      ";
    reverseWords(s);
    cout <<s<<endl;
}